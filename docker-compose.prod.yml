version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: bettergut
      POSTGRES_USER: bettergut
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: America/New_York
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bettergut -d bettergut"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - bettergut-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - TZ=America/New_York
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - bettergut-network

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - TZ=America/New_York
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - bettergut-network

  ai-pipeline:
    build:
      context: ./ai-pipeline
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    depends_on:
      - ollama
    environment:
      - TZ=America/New_York
      - PYTHONUNBUFFERED=1
    volumes:
      - chroma_data:/app/chroma_data
      - ai_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 60s
      timeout: 30s
      retries: 3
    networks:
      - bettergut-network

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - TZ=America/New_York
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    networks:
      - bettergut-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - ai-pipeline
    restart: unless-stopped
    networks:
      - bettergut-network

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  ollama_data:
    driver: local
  chroma_data:
    driver: local
  ai_logs:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  bettergut-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
